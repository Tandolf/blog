{"version":3,"file":"component---src-pages-index-tsx-4569ee89eecac5319c41.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./src/components/header.tsx","webpack://gatsby-starter-blog/./src/hooks/site-metadata.tsx","webpack://gatsby-starter-blog/./src/components/footer.tsx","webpack://gatsby-starter-blog/./src/components/layout.tsx","webpack://gatsby-starter-blog/./src/components/seo.tsx","webpack://gatsby-starter-blog/./src/elements/MajorHeading.tsx","webpack://gatsby-starter-blog/./src/pages/index.tsx"],"sourcesContent":["import { useStaticQuery, graphql } from \"gatsby\"\nimport * as React from \"react\"\nimport { SiteMetadata, useSiteMetadata } from \"../hooks/site-metadata\"\n\nconst Header: React.FC = () => {\n  const siteMetadata: SiteMetadata = useSiteMetadata()\n  return (\n    <header className=\"terminal-nav\">\n      <div className=\"terminal-logo\">\n        <div className=\"logo terminal-prompt\">\n          <a className=\"no-style\" href={siteMetadata.author.name}>\n            Without followers, evil cannot spread\n          </a>\n        </div>\n      </div>\n      <nav className=\"terminal-menu\">\n        <ul>\n          <li>\n            <a className=\"menu-item\" href=\"#\">\n              home\n            </a>\n          </li>\n          <li>\n            <a className=\"menu-item\" href=\"#\">\n              about\n            </a>\n          </li>\n        </ul>\n      </nav>\n    </header>\n  )\n}\n\nexport default Header\n","import { useStaticQuery, graphql } from \"gatsby\";\n\nexport interface SiteMetadata {\n    title: string,\n    description: string,\n    siteUrl: string,\n    author: { name: string, summary: string },\n    social: { twitter: string, linkedin: string, stack_overflow: string }\n}\n\nexport const useSiteMetadata = () => {\n    const { site } = useStaticQuery(\n        graphql`\n            query SiteMetaData {\n                site {\n                    siteMetadata {\n                        title,\n                        description\n                        siteUrl,\n                        author {\n                            name \n                            summary\n                        }\n                        social {\n                            twitter\n                            linkedin\n                            stack_overflow\n                        }\n                    }\n                }\n            }\n        `\n    )\n    return site.siteMetadata\n}","import React from \"react\"\nimport styled from \"styled-components\"\n\nconst Footer: React.FC = () => {\n  return (\n    <footer>\n      <FooterText>\n        Â© {new Date().getFullYear()}, Built by\n        {` `}\n        <a href=\"http://www.github.com/tandolf\">toerktumlare</a>\n      </FooterText>\n    </footer>\n  )\n}\n\nconst FooterText = styled.h3`\n    font-size: 14px;\n    padding-bottom: 10px;\n`;\n\nexport default Footer","import * as React from \"react\"\nimport Header from \"./header\"\nimport styled from \"styled-components\"\nimport { GlobalStyle } from \"../pages\";\nimport Footer from \"./footer\";\n\nconst Wrapper = styled.div`\n  margin: 0 auto;\n  max-width: 70rem;\n  background-color: var(--background-color);\n  color: var(--font-color);\n`;\n\nconst Layout = ({ children }: any) => {\n\n  return (\n    <>\n    <Wrapper>\n      <GlobalStyle />\n      <Header />\n      <main>{children}</main>\n      <Footer />\n    </Wrapper>\n    </>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { PageProps } from \"gatsby\"\nimport \"terminal.css\"\n\ntype DataProps = {\n  description?: any,\n  lang?: any,\n  title?: any,\n  children?: any,\n}\n\nconst Seo: React.FC<DataProps> = ({ description, lang, title, children }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query Seo {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta\n        name=\"twitter:creator\"\n        content={site.siteMetadata?.social?.twitter || ``}\n      />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nSeo.defaultProps = {\n  description: ``,\n}\n\nSeo.propTypes = {\n  description: PropTypes.string,\n  title: PropTypes.string.isRequired,\n}\n\nexport default Seo\n","import styled from \"styled-components\";\n\nconst h2Subtitle = styled.h2`\n    font-size: calc(2rem);\n    color: var(--color-tertiary);\n    margin-top: 96px;\n    margin-bottom: 32px;\n`;\n\nexport default h2Subtitle;\n","import * as React from \"react\"\nimport { Link, graphql, PageProps } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport { createGlobalStyle } from \"styled-components\"\nimport MajorHeading from \"../elements/MajorHeading\"\n\nexport const GlobalStyle = createGlobalStyle`\n  :root {\n    --global-font-size: 15px;\n    --global-line-height: 1.4em;\n    --global-space: 10px;\n    --font-stack: Menlo, Monaco, Lucida Console, Liberation Mono,\n    DejaVu Sans Mono, Bitstream Vera Sans Mono, Courier New, monospace,\n    serif;\n    --mono-font-stack: Menlo, Monaco, Lucida Console, Liberation Mono,\n    DejaVu Sans Mono, Bitstream Vera Sans Mono, Courier New, monospace,\n    serif;\n    --background-color: #222225;\n    --page-width: 60em;\n    --font-color: #e8e9ed;\n    --header-font-color: #7a3496;\n    --color-gray-700: #BFDBF7;\n    --color-tertiary: #ffdf2c;\n    --invert-font-color: #222225;\n    --secondary-color: #1F7A8C;\n    --tertiary-color: #a3abba;\n    --primary-color: #62c4ff;\n    --error-color: #A31621;\n    --progress-bar-background: #3f3f44;\n    --progress-bar-fill: #62c4ff;\n    --code-bg-color: #3f3f44;\n    --input-style: solid;\n    --display-h1-decoration: none;\n    --spacing-4: 4rem;\n    --spacing-0: 0;\n    --spacing-16: 4rem;\n  }\n  body {\n    background-color: var(--background-color);\n    color: var(--font-color);\n  }\n\n  ol li::before {\n    list-style-type: none;\n    margin: 0;\n    padding: 0;\n  }\n\n  .no-line::after {\n    content: none;\n  }\n\n  code::after, code::before {\n    content: none;\n  }\n\n  .mermaid {\n    margin-top: 4em;\n    margin-bottom: 4em;\n\n  }\n\n  .bio-avatar {\n    margin-right: var(--spacing-4);\n    margin-bottom: var(--spacing-0);\n    min-width: 50px;\n    border-radius: 100%;\n  }\n\n  .bio {\n    display: flex;\n    margin-bottom: var(--spacing-16);\n  }\n\n  .bio p {\n    margin-top: 0.8em;\n    margin-bottom: var(--spacing-0);\n  }\n`\n\nconst BlogIndex = ({ data, location }: PageProps<Queries.IndexPageQuery>) => {\n  const siteTitle = data.site?.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n\n  return (\n    <>\n      <Layout>\n        <ul>\n          {posts.map((post: any) => {\n            const title = post.frontmatter.title || post.fields.slug\n\n            return (\n              <li key={post.fields.slug} className=\"no-line\">\n                <article\n                  className=\"post-list-item\"\n                  itemScope\n                  itemType=\"http://schema.org/Article\"\n                >\n                  <MajorHeading>\n                    <Link to={post.fields.slug} itemProp=\"url\">\n                      <span itemProp=\"headline\">{title}</span>\n                    </Link>\n                  </MajorHeading>\n                  <small>{post.frontmatter.date}</small>\n                  <section>\n                    <p\n                      dangerouslySetInnerHTML={{\n                        __html: post.frontmatter.description || post.excerpt,\n                      }}\n                      itemProp=\"description\" />\n                  </section>\n                </article>\n              </li>\n            )\n          })}\n        </ul>\n      </Layout>\n    </>\n  )\n}\n\nexport default BlogIndex\n\n/**\n * Head export to define metadata for the page\n *\n * See: https://www.gatsbyjs.com/docs/reference/built-in-components/gatsby-head/\n */\nexport const Head = () => <Seo title=\"All posts\" />\n\n\nexport const pageQuery = graphql`\n  query IndexPage {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n        }\n      }\n    }\n  }\n`"],"names":["siteMetadata","useStaticQuery","site","React","className","href","author","name","FooterText","styled","Date","getFullYear","Wrapper","children","GlobalStyle","Header","Footer","Seo","description","title","lang","metaDescription","defaultTitle","_site$siteMetadata","content","property","social","twitter","defaultProps","createGlobalStyle","data","posts","location","allMarkdownRemark","nodes","Layout","map","post","frontmatter","fields","slug","key","itemScope","itemType","MajorHeading","Link","to","itemProp","date","dangerouslySetInnerHTML","__html","excerpt","Head"],"sourceRoot":""}